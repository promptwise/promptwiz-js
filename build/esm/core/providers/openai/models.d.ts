import { ModelData } from "../../types";
export declare const models: {
    readonly "text-similarity-davinci-001": ModelData;
    readonly "text-similarity-curie-001": ModelData;
    readonly "text-similarity-babbage-001": ModelData;
    readonly "text-similarity-ada-001": ModelData;
    readonly "text-search-davinci-doc-001": ModelData;
    readonly "text-search-curie-doc-001": ModelData;
    readonly "text-search-babbage-doc-001": ModelData;
    readonly "text-search-ada-doc-001": ModelData;
    readonly "code-search-babbage-code-001": ModelData;
    readonly "code-search-ada-code-001": ModelData;
    readonly davinci: ModelData;
    readonly curie: ModelData;
    readonly babbage: ModelData;
    readonly ada: ModelData;
    readonly "text-davinci-003": ModelData;
    readonly "text-davinci-002": ModelData;
    readonly "text-davinci-001": ModelData;
    readonly "text-curie-001": ModelData;
    readonly "text-babbage-001": ModelData;
    readonly "text-ada-001": ModelData;
    readonly "gpt-4-0314": ModelData;
    readonly "gpt-4-32k-0314": ModelData;
    readonly "gpt-3.5-turbo-0301": ModelData;
    readonly "gpt-4-0613": ModelData;
    readonly "gpt-4-32k-0613": ModelData;
    readonly "gpt-3.5-turbo-16k-0613": ModelData;
    readonly "text-embedding-ada-002": ModelData;
    readonly "gpt-4": ModelData;
    readonly "gpt-4-32k": ModelData;
    readonly "gpt-3.5-turbo": ModelData;
    readonly "gpt-3.5-turbo-16k": ModelData;
    readonly "gpt-3.5-turbo-instruct": ModelData;
};
export type OpenAIModel = keyof typeof models;
export declare const promptDollarCostForModel: (model: OpenAIModel, input_tokens: number, output_tokens: number) => number;
export declare const maxTokensForModel: (model: OpenAIModel) => number;
export declare const encoderNameForModel: (model: OpenAIModel) => "openai_50k" | "openai_100k";
